#summary Query Salesforce using SOQL

= Introduction =

sRecord uses "Method-chain" design pattern to execute query Salesforce.<br/>
It's easy to understand, intuitive and very flexible.<br/>
For example, if you want to execute SOQL like bellow,
{{{
SELECT Account.Name, FROM Account WHERE Name LIKE '%G%' AND Owner.Username = 'sato'
}}}
your code with sRecord is like this.
{{{
$records = Sobject_Account::neu()
    ->contains('Name', 'G')
    ->eq('Owner.Username', 'sato')
    ->select('Name');
}}}

= sRecord method and SOQL =
This is a reference of sRecord criteria method against SOQL expression.

|| *function* || *SOQL* || *sRecord method* ||
|| Equals || name = 'foo' || eq('name', 'foo') ||
|| Not equals || name != 'foo' || ne('name', 'foo') ||
|| Less than || age < '10' || lt('age', 10) ||
|| Less equal || age <= '10' || le('age', 10) ||
|| Greater than || age > '10' || gt('age', 10) ||
|| Greater equal || age >= '10' || ge('age', 10) ||
|| Like || name like '%foo%' || contains('name','foo') ||
|| || name like 'foo%' || starts('name','foo') ||
|| || name like '%foo' || ends('name','foo') ||
|| || name like '%appl_%' || where("name like '%appl_%'") ||
|| includes, excludes || MSP1__c includes ('AAA;BBB', 'CCC') || includes('MSP1__c', 'AAA;BBB', 'CCC') or <br/> includes('MSP1__c', array('AAA;BBB','CCC')) ||
|| Boolean || !BooleanField = TRUE || eq('!BooleanField', TRUE) ||
|| || !BooleanField  = FALSE || eq('!BooleanField', FALSE) ||
|| Null || !SomeField = null || eq('!SomeField', null) ||
|| || !SomeField != null || ne('!SomeField', null) ||
|| In || age in ('10','20','30') || in('age', '10','20','30') or <br> in('age',array('10','20','30) ||
|| Order || ORDER BY name, age || order('name, age') ||
|| Limit || LIMIT 10 || limit(10) ||
|| Offset || OFFSET 10 || offset(10) ||

= Selected column =
if you want to specify selected columns, give parameter to select() method like bellow.
{{{
$records = Sobject_Account::neu()
    ->contains('Name', 'G')
    ->eq('Owner.Username', 'sato')
    ->select('Id, Name');
}}}
if no parameter is given, all of columns are selected.

= Query result =
The return value of select() method is an array of srecord objects (!Sobject_Account for example).

= Query for single row =
While select() is used to query for multiple rows, find() is used to query for single row.
If multiple rows hit in the result of find(), find() throws !Srecord_ActiveRecordException.<br/>

Usage of find() is similar to select(), exept for paramters. find() can have to parameters, first is Id of SObjects, second is selected columns.
{{{
// example for specifing Id

$account = Sobject_Account::neu()->find('xxxxxxxxxxxxxxxx'); // xxxxx is Id of Salesforce SObject.
}}}
